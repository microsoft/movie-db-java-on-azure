<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.microsoft.azure.java.samples.moviedb</groupId>
    <artifactId>web-app</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <parent>
        <groupId>com.microsoft.azure.java.samples.moviedb</groupId>
        <artifactId>movie-db-java-on-azure</artifactId>
        <version>0.1.0-SNAPSHOT</version>
    </parent>
    <properties>
        <java.version>1.8</java.version>
        <docker.image.prefix>${env.ACR_LOGIN_SERVER}</docker.image.prefix>
        <newrelic.version>3.37.0</newrelic.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.test.skip>true</maven.test.skip>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.oauth</groupId>
            <artifactId>spring-security-oauth2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity4</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure</groupId>
            <artifactId>azure-storage-spring-boot-starter</artifactId>
            <version>0.1.7</version>
        </dependency>
        <dependency>
            <groupId>com.newrelic.agent.java</groupId>
            <artifactId>newrelic-java</artifactId>
            <version>${newrelic.version}</version>
            <scope>provided</scope>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.3</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>4.3.7.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>unpack-zip</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.newrelic.agent.java</groupId>
                                    <artifactId>newrelic-java</artifactId>
                                    <version>${newrelic.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <destFileName>newrelic</destFileName>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/newrelic</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>1.5.3.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.11</version>
                <configuration>
                    <serverId>${env.ACR_NAME}</serverId>
                    <registryUrl>https://${env.ACR_LOGIN_SERVER}</registryUrl>
                    <dockerDirectory>src/main/docker/base</dockerDirectory>
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
                <executions>
                    <execution>
                        <id>with-new-relic</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <dockerDirectory>src/main/docker/new-relic</dockerDirectory>
                            <imageName>${docker.image.prefix}/${project.artifactId}-w-new-relic</imageName>
                            <buildArgs>
                                <NEW_RELIC_LICENSE_KEY>${env.NEW_RELIC_LICENSE_KEY}</NEW_RELIC_LICENSE_KEY>
                                <NEW_RELIC_APP_NAME>${env.WEBAPP_NEW_RELIC_APP_NAME}</NEW_RELIC_APP_NAME>
                            </buildArgs>
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}.jar</include>
                                </resource>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}/newrelic</directory>
                                    <include>newrelic.jar</include>
                                </resource>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}/newrelic</directory>
                                    <include>newrelic.yml</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>with-overops</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <dockerDirectory>src/main/docker/overops</dockerDirectory>
                            <imageName>${docker.image.prefix}/${project.artifactId}-w-overops</imageName>
                            <buildArgs>
                                <OVEROPSSK>${env.OVEROPSSK}</OVEROPSSK>
                            </buildArgs>
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}.jar</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>all</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <dockerDirectory>src/main/docker/all</dockerDirectory>
                            <imageName>${docker.image.prefix}/${project.artifactId}-w-all</imageName>
                            <buildArgs>
                                <NEW_RELIC_LICENSE_KEY>${env.NEW_RELIC_LICENSE_KEY}</NEW_RELIC_LICENSE_KEY>
                                <NEW_RELIC_APP_NAME>${env.WEBAPP_NEW_RELIC_APP_NAME}</NEW_RELIC_APP_NAME>
                                <OVEROPSSK>${env.OVEROPSSK}</OVEROPSSK>
                            </buildArgs>
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}.jar</include>
                                </resource>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}/newrelic</directory>
                                    <include>newrelic.jar</include>
                                </resource>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}/newrelic</directory>
                                    <include>newrelic.yml</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.microsoft.azure</groupId>
                <artifactId>azure-webapp-maven-plugin</artifactId>
                <version>0.1.3</version>
                <configuration>
                    <containerSettings>
                        <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                        <serverId>${env.ACR_NAME}</serverId>
                        <registryUrl>https://${env.ACR_LOGIN_SERVER}</registryUrl>
                    </containerSettings>
                    <appSettings>
                        <property>
                            <name>PORT</name>
                            <value>${WEB_APP_CONTAINER_PORT}</value>
                        </property>
                        <property>
                            <name>WEB_APP_CONTAINER_PORT</name>
                            <value>${WEB_APP_CONTAINER_PORT}</value>
                        </property>
                        <property>
                            <name>DATA_API_URL</name>
                            <value>${DATA_API_URL}</value>
                        </property>
                        <property>
                            <name>STORAGE_CONNECTION_STRING</name>
                            <value>${STORAGE_CONNECTION_STRING}</value>
                        </property>
                        <property>
                            <name>ORIGINAL_IMAGE_CONTAINER</name>
                            <value>${ORIGINAL_IMAGE_CONTAINER}</value>
                        </property>
                        <property>
                            <name>THUMBNAIL_IMAGE_CONTAINER</name>
                            <value>${THUMBNAIL_IMAGE_CONTAINER}</value>
                        </property>
                        <property>
                            <name>REDIS_HOST</name>
                            <value>${REDIS_HOST}</value>
                        </property>
                        <property>
                            <name>REDIS_PASSWORD</name>
                            <value>${REDIS_PASSWORD}</value>
                        </property>
                    </appSettings>
                </configuration>
                <executions>
                    <execution>
                        <id>with-new-relic</id>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                        <configuration>
                            <containerSettings>
                                <imageName>${docker.image.prefix}/${project.artifactId}-w-new-relic</imageName>
                                <serverId>${env.ACR_NAME}</serverId>
                                <registryUrl>https://${env.ACR_LOGIN_SERVER}</registryUrl>
                            </containerSettings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>with-overops</id>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                        <configuration>
                            <containerSettings>
                                <imageName>${docker.image.prefix}/${project.artifactId}-w-overops</imageName>
                                <serverId>${env.ACR_NAME}</serverId>
                                <registryUrl>https://${env.ACR_LOGIN_SERVER}</registryUrl>
                            </containerSettings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>all</id>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                        <configuration>
                            <containerSettings>
                                <imageName>${docker.image.prefix}/${project.artifactId}-w-all</imageName>
                                <serverId>${env.ACR_NAME}</serverId>
                                <registryUrl>https://${env.ACR_LOGIN_SERVER}</registryUrl>
                            </containerSettings>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
